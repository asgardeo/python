name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v1.2.3
  release:
    types: [published]
  workflow_dispatch:  # Allow manual trigger

jobs:
  publish-asgardeo:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Build asgardeo package
      working-directory: ./packages/asgardeo
      run: |
        poetry install
        poetry build
    
    - name: Publish asgardeo to PyPI
      working-directory: ./packages/asgardeo
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
      run: poetry publish

  publish-asgardeo-ai:
    runs-on: ubuntu-latest
    needs: publish-asgardeo  # Wait for asgardeo to be published first
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Wait for asgardeo to be available on PyPI
      run: |
        echo "Waiting 2 minutes for asgardeo package to be available on PyPI..."
        sleep 120
    
    - name: Update asgardeo dependency to use PyPI version
      working-directory: ./packages/asgardeo-ai
      run: |
        # Replace local path dependency with PyPI version
        sed -i 's/asgardeo = { path = "..\/asgardeo", develop = true }/asgardeo = "^0.1.0"/' pyproject.toml
        
    - name: Build asgardeo-ai package
      working-directory: ./packages/asgardeo-ai
      run: |
        poetry install
        poetry build
    
    - name: Publish asgardeo-ai to PyPI
      working-directory: ./packages/asgardeo-ai
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
      run: poetry publish
